{"remainingRequest":"/Users/alex/alextest/alcanci/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alex/alextest/alcanci/src/components/truncate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alex/alextest/alcanci/src/components/truncate.vue","mtime":1557256197862},{"path":"/Users/alex/alextest/alcanci/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex/alextest/alcanci/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/alex/alextest/alcanci/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alex/alextest/alcanci/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst h2p = require('html-truncate');\n\nexport default {\n  name: 'Truncate',\n\n  props: {\n    collapsedTextClass: {\n      type: String,\n      default: '',\n    },\n    text: {\n      type: String,\n      required: true,\n    },\n    clamp: {\n      type: String,\n      default: 'Read More',\n    },\n    length: {\n      type: Number,\n      default: 100,\n    },\n    less: {\n      type: String,\n      default: 'Show Less',\n    },\n    type: {\n      type: String,\n      default: 'text',\n    },\n    actionClass: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      show: false,\n      counter: this.length,\n    };\n  },\n  computed: {\n    textClass() {\n      return (this.text.length > this.length && this.collapsedTextClass) ? this.collapsedTextClass : '';\n    },\n  },\n  methods: {\n    truncate(string) {\n      if (string) {\n        if (this.type === 'html') return h2p(string, this.length);\n\n        return string.toString().substring(0, this.length);\n      }\n\n      return '';\n    },\n    toggle() {\n      const toggled = !this.show;\n\n      this.show = toggled;\n      this.$emit('toggle', toggled);\n    },\n\n    h2p(text) {\n      return h2p(text);\n    },\n  },\n};\n",{"version":3,"sources":["truncate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"truncate.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div v-if=\"!show && type !== 'html'\">\n      <span :class=\"textClass\">\n        {{ truncate(text) }}\n      </span>\n      <a\n        v-if=\"text.length >= length\"\n        :class=\"actionClass\"\n        @click=\"toggle()\">{{ clamp }}</a>\n    </div>\n    <div v-else-if=\"!show && type === 'html'\">\n      <span\n        :class=\"textClass\"\n        v-html=\"truncate(text)\" />\n      <a\n        v-if=\"text.length >= length\"\n        :class=\"actionClass\"\n        @click=\"toggle()\">{{ clamp }}</a>\n    </div>\n    <div v-if=\"show && type !== 'html'\">\n      <span>{{ text }}</span>\n      <a\n        v-if=\"text.length >= length\"\n        :class=\"actionClass\"\n        @click=\"toggle()\">{{ less }}</a>\n    </div>\n    <div v-else-if=\"show && type === 'html'\">\n      <div\n        v-if=\"text.length >= length\"\n        v-html=\"text\" />\n      <a\n        v-if=\"text.length >= length\"\n        :class=\"actionClass\"\n        @click=\"toggle()\">{{ less }}</a>\n      <p v-else>\n        {{ h2p(text) }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nconst h2p = require('html-truncate');\n\nexport default {\n  name: 'Truncate',\n\n  props: {\n    collapsedTextClass: {\n      type: String,\n      default: '',\n    },\n    text: {\n      type: String,\n      required: true,\n    },\n    clamp: {\n      type: String,\n      default: 'Read More',\n    },\n    length: {\n      type: Number,\n      default: 100,\n    },\n    less: {\n      type: String,\n      default: 'Show Less',\n    },\n    type: {\n      type: String,\n      default: 'text',\n    },\n    actionClass: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      show: false,\n      counter: this.length,\n    };\n  },\n  computed: {\n    textClass() {\n      return (this.text.length > this.length && this.collapsedTextClass) ? this.collapsedTextClass : '';\n    },\n  },\n  methods: {\n    truncate(string) {\n      if (string) {\n        if (this.type === 'html') return h2p(string, this.length);\n\n        return string.toString().substring(0, this.length);\n      }\n\n      return '';\n    },\n    toggle() {\n      const toggled = !this.show;\n\n      this.show = toggled;\n      this.$emit('toggle', toggled);\n    },\n\n    h2p(text) {\n      return h2p(text);\n    },\n  },\n};\n</script>\n\n<style lang=\"css\" scoped>\n  a {\n    cursor: pointer;\n  }\n</style>\n"]}]}